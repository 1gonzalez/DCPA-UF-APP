{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { generatePrefixes, generateTitles, isIOS } from \"./constants\";\nimport { askAppChoice, checkOptions } from \"./utils\";\nexport function showLocation(options) {\n  var prefixes, useSourceDestiny, sourceLat, sourceLng, sourceLatLng, lat, lng, latlng, title, encodedTitle, app, dialogTitle, dialogMessage, cancelText, appsWhiteList, url;\n  return _regeneratorRuntime.async(function showLocation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          prefixes = generatePrefixes(options);\n          checkOptions(options, prefixes);\n          useSourceDestiny = false;\n\n          if ('sourceLatitude' in options && 'sourceLongitude' in options) {\n            useSourceDestiny = true;\n            sourceLat = parseFloat(options.sourceLatitude);\n            sourceLng = parseFloat(options.sourceLongitude);\n            sourceLatLng = sourceLat + \",\" + sourceLng;\n          }\n\n          lat = parseFloat(options.latitude);\n          lng = parseFloat(options.longitude);\n          latlng = lat + \",\" + lng;\n          title = options.title && options.title.length ? options.title : null;\n          encodedTitle = encodeURIComponent(title);\n          app = options.app && options.app.length ? options.app : null;\n          dialogTitle = options.dialogTitle && options.dialogTitle.length ? options.dialogTitle : 'Open in Maps';\n          dialogMessage = options.dialogMessage && options.dialogMessage.length ? options.dialogMessage : 'What app would you like to use?';\n          cancelText = options.cancelText && options.cancelText.length ? options.cancelText : 'Cancel';\n          appsWhiteList = options.appsWhiteList && options.appsWhiteList.length ? options.appsWhiteList : null;\n\n          if (app) {\n            _context.next = 18;\n            break;\n          }\n\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(askAppChoice({\n            dialogTitle: dialogTitle,\n            dialogMessage: dialogMessage,\n            cancelText: cancelText,\n            appsWhiteList: appsWhiteList,\n            prefixes: prefixes,\n            appTitles: generateTitles(options.appTitles)\n          }));\n\n        case 17:\n          app = _context.sent;\n\n        case 18:\n          url = null;\n          _context.t0 = app;\n          _context.next = _context.t0 === 'apple-maps' ? 22 : _context.t0 === 'google-maps' ? 26 : _context.t0 === 'citymapper' ? 30 : _context.t0 === 'uber' ? 34 : _context.t0 === 'lyft' ? 38 : _context.t0 === 'transit' ? 41 : _context.t0 === 'truckmap' ? 44 : _context.t0 === 'waze' ? 47 : _context.t0 === 'yandex' ? 50 : _context.t0 === 'moovit' ? 53 : _context.t0 === 'yandex-taxi' ? 57 : _context.t0 === 'yandex-maps' ? 59 : _context.t0 === 'kakaomap' ? 61 : _context.t0 === 'mapycz' ? 64 : _context.t0 === 'maps-me' ? 66 : _context.t0 === 'osmand' ? 68 : _context.t0 === 'gett' ? 70 : _context.t0 === 'navermap' ? 72 : 74;\n          break;\n\n        case 22:\n          url = prefixes['apple-maps'];\n          url = useSourceDestiny ? url + \"?saddr=\" + sourceLatLng + \"&daddr=\" + latlng : url + \"?ll=\" + latlng;\n          url += \"&q=\" + (title ? encodedTitle + \"&address=\" + encodedTitle : 'Location');\n          return _context.abrupt(\"break\", 74);\n\n        case 26:\n          url = 'https://maps.google.com/';\n\n          if (useSourceDestiny) {\n            url += \"?saddr=\" + sourceLatLng + \"&daddr=\" + latlng;\n          } else {\n            if (options.googleForceLatLon && title) {\n              url += \"?q=loc:\" + lat + \",+\" + lng + \"+(\" + encodedTitle + \")\";\n            } else if (title) {\n              url += \"?q=\" + encodedTitle;\n            } else {\n              url += \"?q=\" + latlng;\n            }\n          }\n\n          url += options.googlePlaceId ? \"&query_place_id=\" + options.googlePlaceId : '';\n          return _context.abrupt(\"break\", 74);\n\n        case 30:\n          url = prefixes.citymapper + \"directions?endcoord=\" + latlng;\n\n          if (title) {\n            url += \"&endname=\" + encodedTitle;\n          }\n\n          if (useSourceDestiny) {\n            url += \"&startcoord=\" + sourceLatLng;\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 34:\n          url = prefixes.uber + \"?action=setPickup&dropoff[latitude]=\" + lat + \"&dropoff[longitude]=\" + lng;\n\n          if (title) {\n            url += \"&dropoff[nickname]=\" + encodedTitle;\n          }\n\n          url += useSourceDestiny ? \"&pickup[latitude]=\" + sourceLat + \"&pickup[longitude]=\" + sourceLng : '&pickup=my_location';\n          return _context.abrupt(\"break\", 74);\n\n        case 38:\n          url = prefixes.lyft + \"ridetype?id=lyft&destination[latitude]=\" + lat + \"&destination[longitude]=\" + lng;\n\n          if (useSourceDestiny) {\n            url += \"&pickup[latitude]=\" + sourceLat + \"&pickup[longitude]=\" + sourceLng;\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 41:\n          url = prefixes.transit + \"directions?to=\" + latlng;\n\n          if (useSourceDestiny) {\n            url += \"&from=\" + sourceLatLng;\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 44:\n          url = \"http://truckmap.com/place/\" + lat + \",\" + lng;\n\n          if (useSourceDestiny) {\n            url = \"http://truckmap.com/route/\" + sourceLat + \",\" + sourceLng + \"/\" + lat + \",\" + lng;\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 47:\n          url = prefixes.waze + \"?ll=\" + latlng + \"&navigate=yes\";\n\n          if (title) {\n            url += \"&q=\" + encodedTitle;\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 50:\n          url = prefixes.yandex + \"build_route_on_map?lat_to=\" + lat + \"&lon_to=\" + lng;\n\n          if (useSourceDestiny) {\n            url += \"&lat_from=\" + sourceLat + \"&lon_from=\" + sourceLng;\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 53:\n          url = prefixes.moovit + \"directions?dest_lat=\" + lat + \"&dest_lon=\" + lng;\n\n          if (title) {\n            url += \"&dest_name=\" + encodedTitle;\n          }\n\n          if (useSourceDestiny) {\n            url += \"&orig_lat=\" + sourceLat + \"&orig_lon=\" + sourceLng;\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 57:\n          url = prefixes['yandex-taxi'] + \"route?end-lat=\" + lat + \"&end-lon=\" + lng + \"&appmetrica_tracking_id=1178268795219780156\";\n          return _context.abrupt(\"break\", 74);\n\n        case 59:\n          url = prefixes['yandex-maps'] + \"?pt=\" + lng + \",\" + lat;\n          return _context.abrupt(\"break\", 74);\n\n        case 61:\n          url = prefixes.kakaomap + \"look?p=\" + latlng;\n\n          if (useSourceDestiny) {\n            url = prefixes.kakaomap + \"route?sp=\" + sourceLat + \",\" + sourceLng + \"&ep=\" + latlng + \"&by=CAR\";\n          }\n\n          return _context.abrupt(\"break\", 74);\n\n        case 64:\n          url = prefixes.mapycz + \"www.mapy.cz/zakladni?x=\" + lng + \"&y=\" + lat + \"&source=coor&id=\" + lng + \",\" + lat;\n          return _context.abrupt(\"break\", 74);\n\n        case 66:\n          url = prefixes['maps-me'] + \"route?sll=\" + sourceLat + \",\" + sourceLng + \"&saddr= &dll=\" + lat + \",\" + lng + \"&daddr=\" + title + \"&type=vehicle\";\n          return _context.abrupt(\"break\", 74);\n\n        case 68:\n          url = isIOS ? prefixes.osmand + \"?lat=\" + lat + \"&lon=\" + lng : prefixes.osmand + \"?q=\" + lat + \",\" + lng;\n          return _context.abrupt(\"break\", 74);\n\n        case 70:\n          url = prefixes.gett + \"order?pickup=my_location&dropoff_latitude=\" + lat + \"&dropoff_longitude=\" + lng;\n          return _context.abrupt(\"break\", 74);\n\n        case 72:\n          url = prefixes.navermap + \"map?lat=\" + lat + \"&lng=\" + lng + \"&appname=\" + options.naverCallerName;\n\n          if (useSourceDestiny) {\n            url = prefixes.navermap + \"route?slat=\" + sourceLat + \"&slng=\" + sourceLng + \"&dlat=\" + lat + \"&dlng=\" + lng + \"&appname=\" + options.naverCallerName;\n          }\n\n        case 74:\n          if (!url) {\n            _context.next = 76;\n            break;\n          }\n\n          return _context.abrupt(\"return\", Linking.openURL(url).then(function () {\n            return Promise.resolve(app);\n          }));\n\n        case 76:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/node_modules/react-native-map-link/src/index.js"],"names":["generatePrefixes","generateTitles","isIOS","askAppChoice","checkOptions","showLocation","options","prefixes","useSourceDestiny","sourceLat","parseFloat","sourceLatitude","sourceLng","sourceLongitude","sourceLatLng","lat","latitude","lng","longitude","latlng","title","length","encodedTitle","encodeURIComponent","app","dialogTitle","dialogMessage","cancelText","appsWhiteList","appTitles","url","googleForceLatLon","googlePlaceId","citymapper","uber","lyft","transit","waze","yandex","moovit","kakaomap","mapycz","osmand","gett","navermap","naverCallerName","Linking","openURL","then","Promise","resolve"],"mappings":"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","sourcesContent":["/**\n * React Native Map Link\n */\n\nimport {Linking} from 'react-native';\n\nimport {generatePrefixes, generateTitles, isIOS} from './constants';\nimport {askAppChoice, checkOptions} from './utils';\n\n/**\n * Open a maps app, or let the user choose what app to open, with the given location.\n *\n * @param {{\n *     latitude: number | string,\n *     longitude: number | string,\n *     sourceLatitude: number | undefined | null,\n *     sourceLongitude: number | undefined | null,\n *     alwaysIncludeGoogle: boolean | undefined | null,\n *     googleForceLatLon: boolean | undefined | null,\n *     googlePlaceId: number | undefined | null,\n *     title: string | undefined | null,\n *     app: string | undefined | null\n *     dialogTitle: string | undefined | null\n *     dialogMessage: string | undefined | null\n *     cancelText: string | undefined | null\n *     appsWhiteList: array | undefined | null\n *     appTitles: object | undefined | null\n *     naverCallerName: string | undefined\n * }} options\n */\nexport async function showLocation(options) {\n  const prefixes = generatePrefixes(options);\n  checkOptions(options, prefixes);\n\n  let useSourceDestiny = false;\n  let sourceLat;\n  let sourceLng;\n  let sourceLatLng;\n\n  if ('sourceLatitude' in options && 'sourceLongitude' in options) {\n    useSourceDestiny = true;\n    sourceLat = parseFloat(options.sourceLatitude);\n    sourceLng = parseFloat(options.sourceLongitude);\n    sourceLatLng = `${sourceLat},${sourceLng}`;\n  }\n\n  const lat = parseFloat(options.latitude);\n  const lng = parseFloat(options.longitude);\n  const latlng = `${lat},${lng}`;\n  const title = options.title && options.title.length ? options.title : null;\n  const encodedTitle = encodeURIComponent(title);\n  let app = options.app && options.app.length ? options.app : null;\n  const dialogTitle =\n    options.dialogTitle && options.dialogTitle.length\n      ? options.dialogTitle\n      : 'Open in Maps';\n  const dialogMessage =\n    options.dialogMessage && options.dialogMessage.length\n      ? options.dialogMessage\n      : 'What app would you like to use?';\n  const cancelText =\n    options.cancelText && options.cancelText.length\n      ? options.cancelText\n      : 'Cancel';\n  const appsWhiteList =\n    options.appsWhiteList && options.appsWhiteList.length\n      ? options.appsWhiteList\n      : null;\n\n  if (!app) {\n    app = await askAppChoice({\n      dialogTitle,\n      dialogMessage,\n      cancelText,\n      appsWhiteList,\n      prefixes,\n      appTitles: generateTitles(options.appTitles),\n    });\n  }\n\n  let url = null;\n\n  switch (app) {\n    case 'apple-maps':\n      url = prefixes['apple-maps'];\n      url = useSourceDestiny\n        ? `${url}?saddr=${sourceLatLng}&daddr=${latlng}`\n        : `${url}?ll=${latlng}`;\n      url += `&q=${\n        title ? `${encodedTitle}&address=${encodedTitle}` : 'Location'\n      }`;\n      break;\n    case 'google-maps':\n      // Always using universal URL instead of URI scheme since the latter doesn't support all parameters (#155)\n      url = 'https://maps.google.com/';\n      if (useSourceDestiny) {\n        url += `?saddr=${sourceLatLng}&daddr=${latlng}`;\n      } else {\n        if (options.googleForceLatLon && title) {\n          url += `?q=loc:${lat},+${lng}+(${encodedTitle})`;\n        } else if (title) {\n          url += `?q=${encodedTitle}`;\n        } else {\n          url += `?q=${latlng}`;\n        }\n      }\n\n      url += options.googlePlaceId\n        ? `&query_place_id=${options.googlePlaceId}`\n        : '';\n      break;\n    case 'citymapper':\n      url = `${prefixes.citymapper}directions?endcoord=${latlng}`;\n\n      if (title) {\n        url += `&endname=${encodedTitle}`;\n      }\n\n      if (useSourceDestiny) {\n        url += `&startcoord=${sourceLatLng}`;\n      }\n      break;\n    case 'uber':\n      url = `${prefixes.uber}?action=setPickup&dropoff[latitude]=${lat}&dropoff[longitude]=${lng}`;\n\n      if (title) {\n        url += `&dropoff[nickname]=${encodedTitle}`;\n      }\n\n      url += useSourceDestiny\n        ? `&pickup[latitude]=${sourceLat}&pickup[longitude]=${sourceLng}`\n        : '&pickup=my_location';\n\n      break;\n    case 'lyft':\n      url = `${prefixes.lyft}ridetype?id=lyft&destination[latitude]=${lat}&destination[longitude]=${lng}`;\n\n      if (useSourceDestiny) {\n        url += `&pickup[latitude]=${sourceLat}&pickup[longitude]=${sourceLng}`;\n      }\n\n      break;\n    case 'transit':\n      url = `${prefixes.transit}directions?to=${latlng}`;\n\n      if (useSourceDestiny) {\n        url += `&from=${sourceLatLng}`;\n      }\n      break;\n    case 'truckmap':\n      url = `http://truckmap.com/place/${lat},${lng}`;\n\n      if (useSourceDestiny) {\n        url = `http://truckmap.com/route/${sourceLat},${sourceLng}/${lat},${lng}`;\n      }\n      break;\n    case 'waze':\n      url = `${prefixes.waze}?ll=${latlng}&navigate=yes`;\n      if (title) {\n        url += `&q=${encodedTitle}`;\n      }\n      break;\n    case 'yandex':\n      url = `${prefixes.yandex}build_route_on_map?lat_to=${lat}&lon_to=${lng}`;\n\n      if (useSourceDestiny) {\n        url += `&lat_from=${sourceLat}&lon_from=${sourceLng}`;\n      }\n      break;\n    case 'moovit':\n      url = `${prefixes.moovit}directions?dest_lat=${lat}&dest_lon=${lng}`;\n\n      if (title) {\n        url += `&dest_name=${encodedTitle}`;\n      }\n\n      if (useSourceDestiny) {\n        url += `&orig_lat=${sourceLat}&orig_lon=${sourceLng}`;\n      }\n      break;\n    case 'yandex-taxi':\n      url = `${prefixes['yandex-taxi']}route?end-lat=${lat}&end-lon=${lng}&appmetrica_tracking_id=1178268795219780156`;\n\n      break;\n    case 'yandex-maps':\n      url = `${prefixes['yandex-maps']}?pt=${lng},${lat}`;\n\n      break;\n    case 'kakaomap':\n      url = `${prefixes.kakaomap}look?p=${latlng}`;\n\n      if (useSourceDestiny) {\n        url = `${prefixes.kakaomap}route?sp=${sourceLat},${sourceLng}&ep=${latlng}&by=CAR`;\n      }\n      break;\n    case 'mapycz':\n      url = `${prefixes.mapycz}www.mapy.cz/zakladni?x=${lng}&y=${lat}&source=coor&id=${lng},${lat}`;\n\n      break;\n    case 'maps-me':\n      url = `${prefixes['maps-me']}route?sll=${sourceLat},${sourceLng}&saddr= &dll=${lat},${lng}&daddr=${title}&type=vehicle`;\n\n      break;\n    case 'osmand':\n      url = isIOS\n        ? `${prefixes.osmand}?lat=${lat}&lon=${lng}`\n        : `${prefixes.osmand}?q=${lat},${lng}`;\n\n      break;\n    case 'gett':\n      url = `${prefixes.gett}order?pickup=my_location&dropoff_latitude=${lat}&dropoff_longitude=${lng}`;\n\n      break;\n    case 'navermap':\n      url = `${prefixes.navermap}map?lat=${lat}&lng=${lng}&appname=${options.naverCallerName}`;\n\n      if (useSourceDestiny) {\n        url = `${prefixes.navermap}route?slat=${sourceLat}&slng=${sourceLng}&dlat=${lat}&dlng=${lng}&appname=${options.naverCallerName}`;\n      }\n  }\n\n  if (url) {\n    return Linking.openURL(url).then(() => Promise.resolve(app));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}