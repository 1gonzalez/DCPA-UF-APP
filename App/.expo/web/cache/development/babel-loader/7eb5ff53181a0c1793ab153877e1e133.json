{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { CalendarList, Agenda } from 'react-native-calendars';\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\n\nvar Calendario = function (_React$Component) {\n  _inherits(Calendario, _React$Component);\n\n  var _super = _createSuper(Calendario);\n\n  function Calendario() {\n    _classCallCheck(this, Calendario);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Calendario, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          backgroundColor: '#ffac47'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, React.createElement(CalendarList, {\n        firstDay: 1,\n        onDayPress: function onDayPress(day) {\n          alert(\"day pressed, \" + day.day);\n        },\n        theme: {\n          'stylesheet.calendar.header': {\n            week: {\n              marginTop: 5,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }\n          },\n          backgroundColor: '#ffac47',\n          calendarBackground: '#ffac47',\n          textSectionTitleColor: '#b6c1cd',\n          textSectionTitleDisabledColor: '#d9e1e8',\n          selectedDayBackgroundColor: '#00adf5',\n          selectedDayTextColor: 'red',\n          todayTextColor: '#00adf5',\n          disabledArrowColor: 'red',\n          textDisabledColor: '#d9e1e8',\n          dotColor: '#00adf5',\n          selectedDotColor: '#ffffff',\n          arrowColor: 'white',\n          monthTextColor: 'blue',\n          indicatorColor: 'blue',\n          dayTextColor: 'blue',\n          textDayFontFamily: 'monospace',\n          textMonthFontFamily: 'monospace',\n          textDayHeaderFontFamily: 'monospace',\n          textDayFontWeight: '300',\n          textMonthFontWeight: 'bold',\n          textDayHeaderFontWeight: '300',\n          textDayFontSize: 25,\n          textMonthFontSize: 25,\n          textDayHeaderFontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Calendario;\n}(React.Component);\n\nexport { Calendario as default };","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js"],"names":["CalendarList","Agenda","React","Calendario","backgroundColor","day","alert","week","marginTop","flexDirection","justifyContent","calendarBackground","textSectionTitleColor","textSectionTitleDisabledColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","disabledArrowColor","textDisabledColor","dotColor","selectedDotColor","arrowColor","monthTextColor","indicatorColor","dayTextColor","textDayFontFamily","textMonthFontFamily","textDayHeaderFontFamily","textDayFontWeight","textMonthFontWeight","textDayHeaderFontWeight","textDayFontSize","textMonthFontSize","textDayHeaderFontSize","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,MAAvB,QAAoC,wBAApC;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAE,CADZ;AAGA,QAAA,UAAU,EAAE,oBAACC,GAAD,EAAO;AAACC,UAAAA,KAAK,mBAAiBD,GAAG,CAACA,GAArB,CAAL;AAAiC,SAHrD;AAMA,QAAA,KAAK,EAAE;AACH,wCAA8B;AACtCE,YAAAA,IAAI,EAAE;AACJC,cAAAA,SAAS,EAAE,CADP;AAEJC,cAAAA,aAAa,EAAE,KAFX;AAGJC,cAAAA,cAAc,EAAE;AAHZ;AADgC,WAD3B;AAOHN,UAAAA,eAAe,EAAE,SAPd;AAQHO,UAAAA,kBAAkB,EAAE,SARjB;AASHC,UAAAA,qBAAqB,EAAE,SATpB;AAUHC,UAAAA,6BAA6B,EAAE,SAV5B;AAWHC,UAAAA,0BAA0B,EAAE,SAXzB;AAYHC,UAAAA,oBAAoB,EAAE,KAZnB;AAaHC,UAAAA,cAAc,EAAE,SAbb;AAcHC,UAAAA,kBAAkB,EAAE,KAdjB;AAeHC,UAAAA,iBAAiB,EAAE,SAfhB;AAgBHC,UAAAA,QAAQ,EAAE,SAhBP;AAiBHC,UAAAA,gBAAgB,EAAE,SAjBf;AAkBHC,UAAAA,UAAU,EAAE,OAlBT;AAmBHC,UAAAA,cAAc,EAAE,MAnBb;AAoBHC,UAAAA,cAAc,EAAE,MApBb;AAqBHC,UAAAA,YAAY,EAAE,MArBX;AAsBHC,UAAAA,iBAAiB,EAAE,WAtBhB;AAuBHC,UAAAA,mBAAmB,EAAE,WAvBlB;AAwBHC,UAAAA,uBAAuB,EAAE,WAxBtB;AAyBHC,UAAAA,iBAAiB,EAAE,KAzBhB;AA0BHC,UAAAA,mBAAmB,EAAE,MA1BlB;AA2BHC,UAAAA,uBAAuB,EAAE,KA3BtB;AA4BHC,UAAAA,eAAe,EAAE,EA5Bd;AA6BHC,UAAAA,iBAAiB,EAAE,EA7BhB;AA8BHC,UAAAA,qBAAqB,EAAE;AA9BpB,SANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AA2CD;;;;EA7CqC/B,KAAK,CAACgC,S;;SAAzB/B,U","sourcesContent":["import { CalendarList, Agenda} from 'react-native-calendars'; // 1.5.3\r\nimport { View } from 'react-native';\r\nimport React from 'react';\r\n\r\nexport default class Calendario extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={{ backgroundColor: '#ffac47'}}>\r\n        <CalendarList\r\n          firstDay={1}\r\n\r\n        onDayPress={(day)=>{alert(`day pressed, ${day.day}`)}}\r\n\r\n        // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n        theme={{\r\n            'stylesheet.calendar.header': {\r\n    week: {\r\n      marginTop: 5 ,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between'\r\n    }},\r\n            backgroundColor: '#ffac47',\r\n            calendarBackground: '#ffac47',\r\n            textSectionTitleColor: '#b6c1cd',\r\n            textSectionTitleDisabledColor: '#d9e1e8',\r\n            selectedDayBackgroundColor: '#00adf5',\r\n            selectedDayTextColor: 'red',\r\n            todayTextColor: '#00adf5',\r\n            disabledArrowColor: 'red',\r\n            textDisabledColor: '#d9e1e8',\r\n            dotColor: '#00adf5',\r\n            selectedDotColor: '#ffffff',\r\n            arrowColor: 'white',\r\n            monthTextColor: 'blue',\r\n            indicatorColor: 'blue',\r\n            dayTextColor: 'blue',\r\n            textDayFontFamily: 'monospace',\r\n            textMonthFontFamily: 'monospace',\r\n            textDayHeaderFontFamily: 'monospace',\r\n            textDayFontWeight: '300',\r\n            textMonthFontWeight: 'bold',\r\n            textDayHeaderFontWeight: '300',\r\n            textDayFontSize: 25,\r\n            textMonthFontSize: 25,\r\n            textDayHeaderFontSize: 25\r\n        }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}