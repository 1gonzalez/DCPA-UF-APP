{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Calendar } from 'react-native-calendars';\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\n\nvar Calendario = function (_React$Component) {\n  _inherits(Calendario, _React$Component);\n\n  var _super = _createSuper(Calendario);\n\n  function Calendario() {\n    _classCallCheck(this, Calendario);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Calendario, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          paddingTop: 50,\n          flex: 1,\n          backgroundColor: '#ffac47'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, React.createElement(Calendar, {\n        minDate: '2012-05-10',\n        maxDate: '2012-05-30',\n        onDayPress: function onDayPress(day) {\n          alert('selected day', day);\n        },\n        monthFormat: 'MMMM yyyy',\n        onMonthChange: function onMonthChange(month) {\n          console.log('month changed', month);\n        },\n        hideArrows: true,\n        hideExtraDays: true,\n        disableMonthChange: false,\n        firstDay: 1,\n        style: {\n          borderWidth: 1,\n          borderColor: 'gray',\n          height: 350\n        },\n        theme: {\n          backgroundColor: '#ffac47',\n          calendarBackground: '#ffac47',\n          textSectionTitleColor: '#b6c1cd',\n          textSectionTitleDisabledColor: '#d9e1e8',\n          selectedDayBackgroundColor: '#00adf5',\n          selectedDayTextColor: '#ffffff',\n          todayTextColor: '#00adf5',\n          dayTextColor: '#2d4150',\n          textDisabledColor: '#d9e1e8',\n          dotColor: '#00adf5',\n          selectedDotColor: '#ffffff',\n          arrowColor: 'orange',\n          disabledArrowColor: '#d9e1e8',\n          monthTextColor: 'blue',\n          indicatorColor: 'blue',\n          textDayFontFamily: 'monospace',\n          textMonthFontFamily: 'monospace',\n          textDayHeaderFontFamily: 'monospace',\n          textDayFontWeight: '300',\n          textMonthFontWeight: 'bold',\n          textDayHeaderFontWeight: '300',\n          textDayFontSize: 25,\n          textMonthFontSize: 25,\n          textDayHeaderFontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Calendario;\n}(React.Component);\n\nexport { Calendario as default };","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js"],"names":["Calendar","React","Calendario","paddingTop","flex","backgroundColor","day","alert","month","console","log","borderWidth","borderColor","height","calendarBackground","textSectionTitleColor","textSectionTitleDisabledColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","dotColor","selectedDotColor","arrowColor","disabledArrowColor","monthTextColor","indicatorColor","textDayFontFamily","textMonthFontFamily","textDayHeaderFontFamily","textDayFontWeight","textMonthFontWeight","textDayHeaderFontWeight","textDayFontSize","textMonthFontSize","textDayHeaderFontSize","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,EAAd;AAAkBC,UAAAA,IAAI,EAAE,CAAxB;AAA2BC,UAAAA,eAAe,EAAE;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAEE,QAAA,OAAO,EAAE,YAFX;AAIE,QAAA,OAAO,EAAE,YAJX;AAME,QAAA,UAAU,EAAE,oBAAAC,GAAG,EAAI;AACjBC,UAAAA,KAAK,CAAC,cAAD,EAAiBD,GAAjB,CAAL;AACD,SARH;AAUE,QAAA,WAAW,EAAE,WAVf;AAYE,QAAA,aAAa,EAAE,uBAAAE,KAAK,EAAI;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACD,SAdH;AAgBE,QAAA,UAAU,EAAE,IAhBd;AAkBE,QAAA,aAAa,EAAE,IAlBjB;AAqBE,QAAA,kBAAkB,EAAE,KArBtB;AAuBE,QAAA,QAAQ,EAAE,CAvBZ;AAyBE,QAAA,KAAK,EAAG;AACNG,UAAAA,WAAW,EAAE,CADP;AAENC,UAAAA,WAAW,EAAE,MAFP;AAGNC,UAAAA,MAAM,EAAE;AAHF,SAzBV;AA+BA,QAAA,KAAK,EAAE;AACHR,UAAAA,eAAe,EAAE,SADd;AAEHS,UAAAA,kBAAkB,EAAE,SAFjB;AAGHC,UAAAA,qBAAqB,EAAE,SAHpB;AAIHC,UAAAA,6BAA6B,EAAE,SAJ5B;AAKHC,UAAAA,0BAA0B,EAAE,SALzB;AAMHC,UAAAA,oBAAoB,EAAE,SANnB;AAOHC,UAAAA,cAAc,EAAE,SAPb;AAQHC,UAAAA,YAAY,EAAE,SARX;AASHC,UAAAA,iBAAiB,EAAE,SAThB;AAUHC,UAAAA,QAAQ,EAAE,SAVP;AAWHC,UAAAA,gBAAgB,EAAE,SAXf;AAYHC,UAAAA,UAAU,EAAE,QAZT;AAaHC,UAAAA,kBAAkB,EAAE,SAbjB;AAcHC,UAAAA,cAAc,EAAE,MAdb;AAeHC,UAAAA,cAAc,EAAE,MAfb;AAgBHC,UAAAA,iBAAiB,EAAE,WAhBhB;AAiBHC,UAAAA,mBAAmB,EAAE,WAjBlB;AAkBHC,UAAAA,uBAAuB,EAAE,WAlBtB;AAmBHC,UAAAA,iBAAiB,EAAE,KAnBhB;AAoBHC,UAAAA,mBAAmB,EAAE,MApBlB;AAqBHC,UAAAA,uBAAuB,EAAE,KArBtB;AAsBHC,UAAAA,eAAe,EAAE,EAtBd;AAuBHC,UAAAA,iBAAiB,EAAE,EAvBhB;AAwBHC,UAAAA,qBAAqB,EAAE;AAxBpB,SA/BP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AA8DD;;;;EAhEqCnC,KAAK,CAACoC,S;;SAAzBnC,U","sourcesContent":["import { Calendar } from 'react-native-calendars'; // 1.5.3\r\nimport { View } from 'react-native';\r\nimport React from 'react';\r\n\r\nexport default class Calendario extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={{ paddingTop: 50, flex: 1, backgroundColor: '#ffac47'}}>\r\n        <Calendar\r\n          // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n          minDate={'2012-05-10'}\r\n          // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n          maxDate={'2012-05-30'}\r\n          // Handler which gets executed on day press. Default = undefined\r\n          onDayPress={day => {\r\n            alert('selected day', day);\r\n          }}\r\n          // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n          monthFormat={'MMMM yyyy'}\r\n          // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n          onMonthChange={month => {\r\n            console.log('month changed', month);\r\n          }}\r\n          // Hide month navigation arrows. Default = false\r\n          hideArrows={true}\r\n          // Do not show days of other months in month page. Default = false\r\n          hideExtraDays={true}\r\n          // If hideArrows=false and hideExtraDays=false do not swich month when tapping on greyed out\r\n          // day from another month that is visible in calendar page. Default = false\r\n          disableMonthChange={false}\r\n          // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday.\r\n          firstDay={1}\r\n\r\n          style= {{\r\n            borderWidth: 1,\r\n            borderColor: 'gray',\r\n            height: 350\r\n          }}\r\n        // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n        theme={{\r\n            backgroundColor: '#ffac47',\r\n            calendarBackground: '#ffac47',\r\n            textSectionTitleColor: '#b6c1cd',\r\n            textSectionTitleDisabledColor: '#d9e1e8',\r\n            selectedDayBackgroundColor: '#00adf5',\r\n            selectedDayTextColor: '#ffffff',\r\n            todayTextColor: '#00adf5',\r\n            dayTextColor: '#2d4150',\r\n            textDisabledColor: '#d9e1e8',\r\n            dotColor: '#00adf5',\r\n            selectedDotColor: '#ffffff',\r\n            arrowColor: 'orange',\r\n            disabledArrowColor: '#d9e1e8',\r\n            monthTextColor: 'blue',\r\n            indicatorColor: 'blue',\r\n            textDayFontFamily: 'monospace',\r\n            textMonthFontFamily: 'monospace',\r\n            textDayHeaderFontFamily: 'monospace',\r\n            textDayFontWeight: '300',\r\n            textMonthFontWeight: 'bold',\r\n            textDayHeaderFontWeight: '300',\r\n            textDayFontSize: 25,\r\n            textMonthFontSize: 25,\r\n            textDayHeaderFontSize: 25\r\n        }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}