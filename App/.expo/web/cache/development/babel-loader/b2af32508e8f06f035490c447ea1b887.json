{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Separator } from \"react-native-web/dist/index\";\nimport Calendario from \"./Calendar\";\nimport showLocation from 'react-native-map-link';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.buttonStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"Map\",\n        color: \"blue\",\n        fontWeight: \"bold\",\n        onPress: function onPress() {\n          return showLocation({\n            latitude: 29.64728794372166,\n            longitude: -82.34127547299802,\n            title: 'UF DCP',\n            googleForceLatLon: false,\n            alwaysIncludeGoogle: true,\n            dialogTitle: 'This is the dialog Title',\n            dialogMessage: 'This is the amazing dialog Message',\n            cancelText: 'This is the cancel button text',\n            appsWhiteList: ['google-maps'],\n            naverCallerName: 'com.example.myapp'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.buttonStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        title: \"Calendar\",\n        color: \"orange\",\n        fontWeight: \"bold\",\n        onPress: function onPress() {\n          return React.createElement(Calendario, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 32\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    height: '200px',\n    justifyContent: 'center',\n    marginLeft: '10%',\n    marginRight: '10%'\n  },\n  buttonStyle: {\n    paddingBottom: '10px'\n  }\n});","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/App.js"],"names":["React","Separator","Calendario","showLocation","App","styles","container","buttonStyle","latitude","longitude","title","googleForceLatLon","alwaysIncludeGoogle","dialogTitle","dialogMessage","cancelText","appsWhiteList","naverCallerName","Component","StyleSheet","create","flex","flexDirection","height","justifyContent","marginLeft","marginRight","paddingBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;SACuDC,S;AACvD,OAAOC,UAAP;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;IAGqBC,G;;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACA,QAAA,KAAK,EAAE,KADP;AAEA,QAAA,KAAK,EAAE,MAFP;AAGA,QAAA,UAAU,EAAG,MAHb;AAIA,QAAA,OAAO,EAAI;AAAA,iBACTJ,YAAY,CAAC;AACXK,YAAAA,QAAQ,EAAE,iBADC;AAEXC,YAAAA,SAAS,EAAE,CAAC,iBAFD;AAGXC,YAAAA,KAAK,EAAE,QAHI;AAIXC,YAAAA,iBAAiB,EAAE,KAJR;AAMXC,YAAAA,mBAAmB,EAAE,IANV;AAOXC,YAAAA,WAAW,EAAE,0BAPF;AAQXC,YAAAA,aAAa,EAAE,oCARJ;AASXC,YAAAA,UAAU,EAAE,gCATD;AAUXC,YAAAA,aAAa,EAAE,CAAC,aAAD,CAVJ;AAWXC,YAAAA,eAAe,EAAE;AAXN,WAAD,CADH;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAyBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACA,QAAA,KAAK,EAAE,UADP;AAEA,QAAA,KAAK,EAAE,QAFP;AAGA,QAAA,UAAU,EAAG,MAHb;AAIA,QAAA,OAAO,EAAI;AAAA,iBAAM,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAzBJ,CADF;AAqCD;;;;EAvC8BP,KAAK,CAACkB,S;;SAAlBd,G;AA0CrB,IAAMC,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,MAAM,EAAE,OAHC;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE,KALH;AAMTC,IAAAA,WAAW,EAAE;AANJ,GADoB;AASjCnB,EAAAA,WAAW,EAAE;AACToB,IAAAA,aAAa,EAAE;AADN;AAToB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Button, View, SafeAreaView, Text, Separator } from 'react-native';\nimport Calendario from './Calendar'\nimport showLocation from 'react-native-map-link'\n\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n          <View style={styles.buttonStyle}>\n              <Button\n              title= 'Map'\n              color= 'blue'\n              fontWeight = 'bold'\n              onPress = {() => \n                showLocation({\n                  latitude: 29.64728794372166, \n                  longitude: -82.34127547299802,\n                  title: 'UF DCP',  // optional\n                  googleForceLatLon: false,  // optionally force GoogleMaps to use the latlon for the query instead of the title\n                // googlePlaceId: 'ChIJGVtI4by3t4kRr51d_Qm_x58',  // optionally specify the google-place-id\n                  alwaysIncludeGoogle: true, // optional, true will always add Google Maps to iOS and open in Safari, even if app is not installed (default: false)\n                  dialogTitle: 'This is the dialog Title', // optional (default: 'Open in Maps')\n                  dialogMessage: 'This is the amazing dialog Message', // optional (default: 'What app would you like to use?')\n                  cancelText: 'This is the cancel button text', // optional (default: 'Cancel')\n                  appsWhiteList: ['google-maps'], // optionally you can set which apps to show (default: will show all supported apps installed on device)\n                  naverCallerName: 'com.example.myapp' // to link into Naver Map You should provide your appname which is the bundle ID in iOS and applicationId in android.\n                  // appTitles: { 'google-maps': 'My custom Google Maps title' } // optionally you can override default app titles\n                  // app: 'uber'  // optionally specify specific app to use\n                })\n              }\n              />\n          </View>\n          <View style={styles.buttonStyle}>\n              <Button\n              title= 'Calendar'\n              color= 'orange'\n              fontWeight = 'bold'\n              onPress = {() => <Calendario />}\n              />\n          </View>\n        \n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    height: '200px',\n    justifyContent: 'center',\n    marginLeft: '10%',\n    marginRight: '10%'\n},\nbuttonStyle: {\n    paddingBottom: '10px',\n}\n});\n\n"]},"metadata":{},"sourceType":"module"}