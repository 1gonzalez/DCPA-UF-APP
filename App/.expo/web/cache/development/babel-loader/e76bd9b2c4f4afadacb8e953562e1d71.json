{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Mailer from 'react-native-mail';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleEmail = function () {\n      Mailer.mail({\n        subject: 'need help',\n        recipients: ['support@example.com'],\n        ccRecipients: ['supportCC@example.com'],\n        bccRecipients: ['supportBCC@example.com'],\n        body: '<b>A Bold Body</b>',\n        customChooserTitle: \"This is my new title\",\n        isHTML: true,\n        attachments: [{\n          path: '',\n          type: '',\n          name: ''\n        }]\n      }, function (error, event) {\n        Alert.alert(error, event, [{\n          text: 'Ok',\n          onPress: function onPress() {\n            return console.log('OK: Email Error Response');\n          }\n        }, {\n          text: 'Cancel',\n          onPress: function onPress() {\n            return console.log('CANCEL: Email Error Response');\n          }\n        }], {\n          cancelable: true\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        onPress: this.handleEmail,\n        title: \"Email Me\",\n        color: \"#841584\",\n        accessabilityLabel: \"Purple Email Me Button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/App.js"],"names":["React","Component","Mailer","App","handleEmail","mail","subject","recipients","ccRecipients","bccRecipients","body","customChooserTitle","isHTML","attachments","path","type","name","error","event","Alert","alert","text","onPress","console","log","cancelable","styles","container"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;IAEqBC,G;;;;;;;;;;;;;;;;UAEnBC,W,GAAc,YAAM;AAClBF,MAAAA,MAAM,CAACG,IAAP,CAAY;AACVC,QAAAA,OAAO,EAAE,WADC;AAEVC,QAAAA,UAAU,EAAE,CAAC,qBAAD,CAFF;AAGVC,QAAAA,YAAY,EAAE,CAAC,uBAAD,CAHJ;AAIVC,QAAAA,aAAa,EAAE,CAAC,wBAAD,CAJL;AAKVC,QAAAA,IAAI,EAAE,oBALI;AAMVC,QAAAA,kBAAkB,EAAE,sBANV;AAOVC,QAAAA,MAAM,EAAE,IAPE;AAQVC,QAAAA,WAAW,EAAE,CAAC;AACZC,UAAAA,IAAI,EAAE,EADM;AAEZC,UAAAA,IAAI,EAAE,EAFM;AAIZC,UAAAA,IAAI,EAAE;AAJM,SAAD;AARH,OAAZ,EAcG,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACnBC,QAAAA,KAAK,CAACC,KAAN,CACEH,KADF,EAEEC,KAFF,EAGE,CACE;AAACG,UAAAA,IAAI,EAAE,IAAP;AAAaC,UAAAA,OAAO,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAN;AAAA;AAAtB,SADF,EAEE;AAACH,UAAAA,IAAI,EAAE,QAAP;AAAiBC,UAAAA,OAAO,EAAE;AAAA,mBAAMC,OAAO,CAACC,GAAR,CAAY,8BAAZ,CAAN;AAAA;AAA1B,SAFF,CAHF,EAOE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAPF;AASD,OAxBD;AAyBD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKvB,WADhB;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,kBAAkB,EAAC,wBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD;;;;EAzC8BH,S;;SAAZE,G","sourcesContent":["import React, { Component } from 'react';\nimport { View, Alert, Button } from 'react-native';\nimport Mailer from 'react-native-mail';\n \nexport default class App extends Component {\n \n  handleEmail = () => {\n    Mailer.mail({\n      subject: 'need help',\n      recipients: ['support@example.com'],\n      ccRecipients: ['supportCC@example.com'],\n      bccRecipients: ['supportBCC@example.com'],\n      body: '<b>A Bold Body</b>',\n      customChooserTitle: \"This is my new title\", // Android only (defaults to \"Send Mail\")\n      isHTML: true,\n      attachments: [{\n        path: '',  // The absolute path of the file from which to read data.\n        type: '',   // Mime Type: jpg, png, doc, ppt, html, pdf, csv\n        // mimeType - use only if you want to use custom type\n        name: '',   // Optional: Custom filename for attachment\n      }]\n    }, (error, event) => {\n      Alert.alert(\n        error,\n        event,\n        [\n          {text: 'Ok', onPress: () => console.log('OK: Email Error Response')},\n          {text: 'Cancel', onPress: () => console.log('CANCEL: Email Error Response')}\n        ],\n        { cancelable: true }\n      )\n    });\n  }\n \n  render() {\n    return (\n      <View style={styles.container}>\n        <Button\n          onPress={this.handleEmail}\n          title=\"Email Me\"\n          color=\"#841584\"\n          accessabilityLabel=\"Purple Email Me Button\"\n        />\n      </View>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}