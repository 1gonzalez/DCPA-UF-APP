{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Screens/Events.js\";\n\nimport React, { useState, setState, Component } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from \"react-native-elements\";\nimport EventCalendar from \"react-native-events-calendar\";\nimport Modal from \"react-native-modal\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Events = function Events() {\n  var events = [];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var toggleModal = function toggleModal() {\n    setModalVisible(!isModalVisible);\n  };\n\n  var createEvent = function createEvent(start, end, title, summary) {\n    events.push({\n      start: start,\n      end: end,\n      title: title,\n      summary: summary\n    });\n  };\n\n  var eventClicked = function eventClicked(event) {\n    alert(event.title + \" \\nEvent Start: \" + event.start + \"\\nEvent End: \" + event.end + \"\\nDetails: \" + event.summary + \"\\n      \");\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      flex: \"1\",\n      alignItems: \"flex-end\",\n      paddingRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Edit\",\n    titleStyle: {\n      color: \"black\",\n      fontSize: 18\n    },\n    buttonStyle: {\n      backgroundColor: \"transparent\"\n    },\n    onPress: toggleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), React.createElement(Modal, {\n    isVisible: isModalVisible,\n    deviceWidth: width,\n    deviceHeight: height,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"I am the modal content!\"))), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(EventCalendar, {\n    eventTapped: eventClicked,\n    events: events,\n    width: width,\n    size: 90,\n    scrollToFirst: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Events;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar test = function test() {\n  React.createElement(Modal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"This is a test\")));\n};","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Screens/Events.js"],"names":["React","useState","setState","Component","Button","EventCalendar","Modal","Dimensions","get","width","height","Events","events","isModalVisible","setModalVisible","toggleModal","createEvent","start","end","title","summary","push","eventClicked","event","alert","styles","container","flex","alignItems","paddingRight","color","fontSize","backgroundColor","StyleSheet","create","justifyContent","test"],"mappings":"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AND","sourcesContent":["import React, { useState, setState, Component } from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Dimensions,\r\n  ImageBackground,\r\n  Text,\r\n} from \"react-native\";\r\nimport { Button } from \"react-native-elements\";\r\nimport EventCalendar from \"react-native-events-calendar\";\r\nimport Modal from \"react-native-modal\";\r\n\r\n//get the size of device\r\nlet { width, height } = Dimensions.get(\"window\");\r\nconst Events = () => {\r\n  var events = [];\r\n\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n  const createEvent = (start, end, title, summary) => {\r\n    events.push({\r\n      start: start,\r\n      end: end,\r\n      title: title,\r\n      summary: summary,\r\n    });\r\n  };\r\n\r\n  const eventClicked = (event) => {\r\n    alert(\r\n      `${event.title} \\nEvent Start: ${event.start}\\nEvent End: ${event.end}\\nDetails: ${event.summary}\r\n      `\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          flex: \"1\",\r\n          alignItems: \"flex-end\",\r\n          paddingRight: 8,\r\n        }}\r\n      >\r\n        <Button\r\n          title={\"Edit\"}\r\n          titleStyle={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n          }}\r\n          buttonStyle={{\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n          onPress={toggleModal}\r\n        />\r\n      </View>\r\n      <Modal\r\n        isVisible={isModalVisible}\r\n        deviceWidth={width}\r\n        deviceHeight={height}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <Text>I am the modal content!</Text>\r\n        </View>\r\n      </Modal>\r\n      <View style={styles.container}>\r\n        <EventCalendar\r\n          eventTapped={eventClicked}\r\n          events={events}\r\n          width={width}\r\n          size={90}\r\n          scrollToFirst\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nconst test = () => {\r\n  <Modal>\r\n    <View>\r\n      <Text>This is a test</Text>\r\n    </View>\r\n  </Modal>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}