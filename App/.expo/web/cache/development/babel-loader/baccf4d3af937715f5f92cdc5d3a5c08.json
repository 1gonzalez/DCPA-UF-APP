{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Screens/Events.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, setState, Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport DatePicker from \"react-native-datepicker\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button } from \"react-native-elements\";\nimport EventCalendar from \"react-native-events-calendar\";\nimport Modal from \"react-native-modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar button = function button(title, nav, navigation, color) {\n  return React.createElement(View, {\n    style: styles.buttonStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: title,\n    titleStyle: {\n      color: \"white\",\n      fontSize: 15,\n      fontWeight: \"bold\"\n    },\n    buttonStyle: {\n      backgroundColor: color,\n      borderRadius: 60\n    },\n    onPress: function onPress() {\n      return navigation.navigate(nav);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Event = function Event(_ref) {\n  var navigation = _ref.navigation;\n  var events = [];\n\n  var createEvent = function createEvent(start, end, title, summary) {\n    events.push({\n      start: start,\n      end: end,\n      title: title,\n      summary: summary\n    });\n  };\n\n  var eventClicked = function eventClicked(event) {\n    alert(event.title + \" \\nEvent Start: \" + event.start + \"\\nEvent End: \" + event.end + \"\\nDetails: \" + event.summary + \"\\n      \");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      flex: \"1\",\n      alignItems: \"flex-end\",\n      paddingRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Edit\",\n    titleStyle: {\n      color: \"black\",\n      fontSize: 18\n    },\n    buttonStyle: {\n      backgroundColor: \"transparent\"\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"Transition\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(EventCalendar, {\n    eventTapped: eventClicked,\n    events: events,\n    width: width,\n    size: 90,\n    scrollToFirst: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      backgroundColor: \"red\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Test\")));\n};\n\nexport default Event;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonStyle: {\n    padding: 5\n  },\n  edition: {\n    backgroundColor: \"lightblue\",\n    flex: 1,\n    height: \"100%\",\n    marginLeft: \"7%\",\n    marginRight: \"7%\",\n    marginTop: \"10%\"\n  },\n  title: {\n    height: \"10%\",\n    paddingTop: \"10%\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1\n  }\n});\nexport var Transition = function (_Component) {\n  _inherits(Transition, _Component);\n\n  var _super = _createSuper(Transition);\n\n  function Transition(props) {\n    var _this2;\n\n    _classCallCheck(this, Transition);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      title: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    };\n    return _this2;\n  }\n\n  _createClass(Transition, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ScrollView, {\n        style: {\n          backgroundColor: \"lightblue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.edition,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          textAlign: \"center\",\n          paddingBottom: \"2%\",\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, \"ADD EVENT\"), React.createElement(View, {\n        style: styles.form,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, \"Enter Event Title\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Even Title\",\n        placeholderTextColor: \"#black\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            title: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return alert(_this3.state.title);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, \"aAAAAA\")))));\n    }\n  }]);\n\n  return Transition;\n}(Component);","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Screens/Events.js"],"names":["React","useState","setState","Component","DatePicker","Button","EventCalendar","Modal","button","title","nav","navigation","color","styles","buttonStyle","fontSize","fontWeight","backgroundColor","borderRadius","navigate","Dimensions","get","width","height","Event","events","createEvent","start","end","summary","push","eventClicked","event","alert","container","flex","alignItems","paddingRight","StyleSheet","create","justifyContent","padding","edition","marginLeft","marginRight","marginTop","paddingTop","input","margin","borderWidth","Transition","props","state","description","startDate","endDate","textAlign","paddingBottom","form","text"],"mappings":"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","sourcesContent":["import React, { useState, setState, Component } from \"react\";\r\nimport { ScrollView } from \"react-native\";\r\nimport DatePicker from \"react-native-datepicker\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  View,\r\n  Dimensions,\r\n  Text,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { Button } from \"react-native-elements\";\r\nimport EventCalendar from \"react-native-events-calendar\";\r\nimport Modal from \"react-native-modal\";\r\nimport { Alert } from \"react-native\";\r\n\r\nconst button = (title, nav, navigation, color) => {\r\n  return (\r\n    <View style={styles.buttonStyle}>\r\n      <Button\r\n        title={title}\r\n        titleStyle={{\r\n          color: \"white\",\r\n          fontSize: 15,\r\n          fontWeight: \"bold\",\r\n        }}\r\n        buttonStyle={{\r\n          backgroundColor: color,\r\n          borderRadius: 60,\r\n        }}\r\n        onPress={() => navigation.navigate(nav)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n//get the size of device\r\nlet { width, height } = Dimensions.get(\"window\");\r\nconst Event = ({ navigation }) => {\r\n  var events = [];\r\n\r\n  const createEvent = (start, end, title, summary) => {\r\n    events.push({\r\n      start: start,\r\n      end: end,\r\n      title: title,\r\n      summary: summary,\r\n    });\r\n  };\r\n\r\n  const eventClicked = (event) => {\r\n    alert(\r\n      `${event.title} \\nEvent Start: ${event.start}\\nEvent End: ${event.end}\\nDetails: ${event.summary}\r\n      `\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          flex: \"1\",\r\n          alignItems: \"flex-end\",\r\n          paddingRight: 8,\r\n        }}\r\n      >\r\n        <Button\r\n          title={\"Edit\"}\r\n          titleStyle={{\r\n            color: \"black\",\r\n            fontSize: 18,\r\n          }}\r\n          buttonStyle={{\r\n            backgroundColor: \"transparent\",\r\n          }}\r\n          onPress={() => navigation.navigate(\"Transition\")}\r\n        />\r\n      </View>\r\n      <View style={styles.container}>\r\n        <EventCalendar\r\n          eventTapped={eventClicked}\r\n          events={events}\r\n          width={width}\r\n          size={90}\r\n          scrollToFirst\r\n        />\r\n      </View>\r\n      <View style={{ backgroundColor: \"red\", width: \"100%\" }}>\r\n        <Button>Test</Button>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Event;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonStyle: {\r\n    padding: 5,\r\n  },\r\n  edition: {\r\n    backgroundColor: \"lightblue\",\r\n    flex: 1,\r\n    height: \"100%\",\r\n    marginLeft: \"7%\",\r\n    marginRight: \"7%\",\r\n    marginTop: \"10%\",\r\n  },\r\n  title: {\r\n    height: \"10%\",\r\n    paddingTop: \"10%\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n  },\r\n});\r\n\r\nexport class Transition extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <ScrollView style={{ backgroundColor: \"lightblue\" }}>\r\n        <View style={styles.edition}>\r\n          <View style={styles.title}>\r\n            <Text\r\n              style={{\r\n                fontSize: 24,\r\n                textAlign: \"center\",\r\n                paddingBottom: \"2%\",\r\n                color: \"black\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              ADD EVENT\r\n            </Text>\r\n            <View style={styles.form}>\r\n              <Text>Enter Event Title</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Enter Even Title\"\r\n                placeholderTextColor=\"#black\"\r\n                autoCapitalize=\"none\"\r\n                onChangeText={(text) => {\r\n                  this.setState({ title: text });\r\n                }}\r\n              />\r\n              <Button onPress={() => alert(this.state.title)}>aAAAAA</Button>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}