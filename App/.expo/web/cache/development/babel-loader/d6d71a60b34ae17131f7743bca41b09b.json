{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var isIOS = Platform.OS === 'ios';\nexport function generatePrefixes(options) {\n  return {\n    'apple-maps': isIOS ? 'maps://' : 'applemaps://',\n    'google-maps': prefixForGoogleMaps(options.alwaysIncludeGoogle),\n    citymapper: 'citymapper://',\n    uber: 'uber://',\n    lyft: 'lyft://',\n    transit: 'transit://',\n    truckmap: 'truckmap://',\n    waze: 'waze://',\n    yandex: 'yandexnavi://',\n    moovit: 'moovit://',\n    'yandex-maps': 'yandexmaps://maps.yandex.ru/',\n    'yandex-taxi': 'yandextaxi://',\n    kakaomap: 'kakaomap://',\n    mapycz: isIOS ? 'szn-mapy://' : 'mapycz://',\n    'maps-me': 'mapsme://',\n    osmand: isIOS ? 'osmandmaps://' : 'osmand.geo://',\n    gett: 'gett://',\n    navermap: options.naverCallerName ? 'nmap://' : 'nmap-disabled://'\n  };\n}\nexport function prefixForGoogleMaps(alwaysIncludeGoogle) {\n  return isIOS && !alwaysIncludeGoogle ? 'comgooglemaps://' : 'https://maps.google.com/';\n}\nexport function generateTitles(titles) {\n  return _objectSpread({\n    'apple-maps': 'Apple Maps',\n    'google-maps': 'Google Maps',\n    citymapper: 'Citymapper',\n    uber: 'Uber',\n    lyft: 'Lyft',\n    transit: 'The Transit App',\n    truckmap: 'TruckMap',\n    waze: 'Waze',\n    yandex: 'Yandex.Navi',\n    moovit: 'Moovit',\n    'yandex-taxi': 'Yandex Taxi',\n    'yandex-maps': 'Yandex Maps',\n    kakaomap: 'Kakao Maps',\n    mapycz: 'Mapy.cz',\n    'maps-me': 'Maps Me',\n    osmand: 'OsmAnd',\n    gett: 'Gett',\n    navermap: 'Naver Map'\n  }, titles || {});\n}\nexport var icons = {\n  'apple-maps': require(\"./images/apple-maps.png\"),\n  'google-maps': require(\"./images/google-maps.png\"),\n  citymapper: require(\"./images/citymapper.png\"),\n  uber: require(\"./images/uber.png\"),\n  lyft: require(\"./images/lyft.png\"),\n  transit: require(\"./images/transit.png\"),\n  truckmap: require(\"./images/truckmap.png\"),\n  waze: require(\"./images/waze.png\"),\n  yandex: require(\"./images/yandex.png\"),\n  moovit: require(\"./images/moovit.png\"),\n  'yandex-taxi': require(\"./images/yandex-taxi.png\"),\n  'yandex-maps': require(\"./images/yandex-maps.png\"),\n  kakaomap: require(\"./images/kakao-map.png\"),\n  mapycz: require(\"./images/mapycz.png\"),\n  'maps-me': require(\"./images/maps-me.png\"),\n  osmand: require(\"./images/osmand.png\"),\n  gett: require(\"./images/gett.png\"),\n  navermap: require(\"./images/naver-map.png\")\n};\nexport var appKeys = Object.keys(icons);","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/node_modules/react-native-map-link/src/constants.js"],"names":["isIOS","Platform","OS","generatePrefixes","options","prefixForGoogleMaps","alwaysIncludeGoogle","citymapper","uber","lyft","transit","truckmap","waze","yandex","moovit","kakaomap","mapycz","osmand","gett","navermap","naverCallerName","generateTitles","titles","icons","require","appKeys","Object","keys"],"mappings":";;;;;;;AAMA,OAAO,IAAMA,KAAK,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAA9B;AAEP,OAAO,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACxC,SAAO;AACL,kBAAcJ,KAAK,GAAG,SAAH,GAAe,cAD7B;AAEL,mBAAeK,mBAAmB,CAACD,OAAO,CAACE,mBAAT,CAF7B;AAGLC,IAAAA,UAAU,EAAE,eAHP;AAILC,IAAAA,IAAI,EAAE,SAJD;AAKLC,IAAAA,IAAI,EAAE,SALD;AAMLC,IAAAA,OAAO,EAAE,YANJ;AAOLC,IAAAA,QAAQ,EAAE,aAPL;AAQLC,IAAAA,IAAI,EAAE,SARD;AASLC,IAAAA,MAAM,EAAE,eATH;AAULC,IAAAA,MAAM,EAAE,WAVH;AAWL,mBAAe,8BAXV;AAYL,mBAAe,eAZV;AAaLC,IAAAA,QAAQ,EAAE,aAbL;AAcLC,IAAAA,MAAM,EAAEhB,KAAK,GAAG,aAAH,GAAmB,WAd3B;AAeL,eAAW,WAfN;AAgBLiB,IAAAA,MAAM,EAAEjB,KAAK,GAAG,eAAH,GAAqB,eAhB7B;AAiBLkB,IAAAA,IAAI,EAAE,SAjBD;AAkBLC,IAAAA,QAAQ,EAAEf,OAAO,CAACgB,eAAR,GAA0B,SAA1B,GAAsC;AAlB3C,GAAP;AAoBD;AAED,OAAO,SAASf,mBAAT,CAA6BC,mBAA7B,EAAkD;AACvD,SAAON,KAAK,IAAI,CAACM,mBAAV,GACH,kBADG,GAEH,0BAFJ;AAGD;AAED,OAAO,SAASe,cAAT,CAAwBC,MAAxB,EAAgC;AACrC;AACE,kBAAc,YADhB;AAEE,mBAAe,aAFjB;AAGEf,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,IAAI,EAAE,MAJR;AAKEC,IAAAA,IAAI,EAAE,MALR;AAMEC,IAAAA,OAAO,EAAE,iBANX;AAOEC,IAAAA,QAAQ,EAAE,UAPZ;AAQEC,IAAAA,IAAI,EAAE,MARR;AASEC,IAAAA,MAAM,EAAE,aATV;AAUEC,IAAAA,MAAM,EAAE,QAVV;AAWE,mBAAe,aAXjB;AAYE,mBAAe,aAZjB;AAaEC,IAAAA,QAAQ,EAAE,YAbZ;AAcEC,IAAAA,MAAM,EAAE,SAdV;AAeE,eAAW,SAfb;AAgBEC,IAAAA,MAAM,EAAE,QAhBV;AAiBEC,IAAAA,IAAI,EAAE,MAjBR;AAkBEC,IAAAA,QAAQ,EAAE;AAlBZ,KAmBMG,MAAM,IAAI,EAnBhB;AAqBD;AAED,OAAO,IAAMC,KAAK,GAAG;AACnB,gBAAcC,OAAO,2BADF;AAEnB,iBAAeA,OAAO,4BAFH;AAGnBjB,EAAAA,UAAU,EAAEiB,OAAO,2BAHA;AAInBhB,EAAAA,IAAI,EAAEgB,OAAO,qBAJM;AAKnBf,EAAAA,IAAI,EAAEe,OAAO,qBALM;AAMnBd,EAAAA,OAAO,EAAEc,OAAO,wBANG;AAOnBb,EAAAA,QAAQ,EAAEa,OAAO,yBAPE;AAQnBZ,EAAAA,IAAI,EAAEY,OAAO,qBARM;AASnBX,EAAAA,MAAM,EAAEW,OAAO,uBATI;AAUnBV,EAAAA,MAAM,EAAEU,OAAO,uBAVI;AAWnB,iBAAeA,OAAO,4BAXH;AAYnB,iBAAeA,OAAO,4BAZH;AAanBT,EAAAA,QAAQ,EAAES,OAAO,0BAbE;AAcnBR,EAAAA,MAAM,EAAEQ,OAAO,uBAdI;AAenB,aAAWA,OAAO,wBAfC;AAgBnBP,EAAAA,MAAM,EAAEO,OAAO,uBAhBI;AAiBnBN,EAAAA,IAAI,EAAEM,OAAO,qBAjBM;AAkBnBL,EAAAA,QAAQ,EAAEK,OAAO;AAlBE,CAAd;AAqBP,OAAO,IAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAhB","sourcesContent":["/**\n * React Native Map Link\n */\n\nimport {Platform} from 'react-native';\n\nexport const isIOS = Platform.OS === 'ios';\n\nexport function generatePrefixes(options) {\n  return {\n    'apple-maps': isIOS ? 'maps://' : 'applemaps://',\n    'google-maps': prefixForGoogleMaps(options.alwaysIncludeGoogle),\n    citymapper: 'citymapper://',\n    uber: 'uber://',\n    lyft: 'lyft://',\n    transit: 'transit://',\n    truckmap: 'truckmap://',\n    waze: 'waze://',\n    yandex: 'yandexnavi://',\n    moovit: 'moovit://',\n    'yandex-maps': 'yandexmaps://maps.yandex.ru/',\n    'yandex-taxi': 'yandextaxi://',\n    kakaomap: 'kakaomap://',\n    mapycz: isIOS ? 'szn-mapy://' : 'mapycz://',\n    'maps-me': 'mapsme://',\n    osmand: isIOS ? 'osmandmaps://' : 'osmand.geo://',\n    gett: 'gett://',\n    navermap: options.naverCallerName ? 'nmap://' : 'nmap-disabled://',\n  };\n}\n\nexport function prefixForGoogleMaps(alwaysIncludeGoogle) {\n  return isIOS && !alwaysIncludeGoogle\n    ? 'comgooglemaps://'\n    : 'https://maps.google.com/';\n}\n\nexport function generateTitles(titles) {\n  return {\n    'apple-maps': 'Apple Maps',\n    'google-maps': 'Google Maps',\n    citymapper: 'Citymapper',\n    uber: 'Uber',\n    lyft: 'Lyft',\n    transit: 'The Transit App',\n    truckmap: 'TruckMap',\n    waze: 'Waze',\n    yandex: 'Yandex.Navi',\n    moovit: 'Moovit',\n    'yandex-taxi': 'Yandex Taxi',\n    'yandex-maps': 'Yandex Maps',\n    kakaomap: 'Kakao Maps',\n    mapycz: 'Mapy.cz',\n    'maps-me': 'Maps Me',\n    osmand: 'OsmAnd',\n    gett: 'Gett',\n    navermap: 'Naver Map',\n    ...(titles || {}),\n  };\n}\n\nexport const icons = {\n  'apple-maps': require('./images/apple-maps.png'),\n  'google-maps': require('./images/google-maps.png'),\n  citymapper: require('./images/citymapper.png'),\n  uber: require('./images/uber.png'),\n  lyft: require('./images/lyft.png'),\n  transit: require('./images/transit.png'),\n  truckmap: require('./images/truckmap.png'),\n  waze: require('./images/waze.png'),\n  yandex: require('./images/yandex.png'),\n  moovit: require('./images/moovit.png'),\n  'yandex-taxi': require('./images/yandex-taxi.png'),\n  'yandex-maps': require('./images/yandex-maps.png'),\n  kakaomap: require('./images/kakao-map.png'),\n  mapycz: require('./images/mapycz.png'),\n  'maps-me': require('./images/maps-me.png'),\n  osmand: require('./images/osmand.png'),\n  gett: require('./images/gett.png'),\n  navermap: require('./images/naver-map.png'),\n};\n\nexport const appKeys = Object.keys(icons);\n"]},"metadata":{},"sourceType":"module"}