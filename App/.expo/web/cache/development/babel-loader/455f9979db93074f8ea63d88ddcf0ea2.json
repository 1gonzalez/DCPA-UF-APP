{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { CalendarList, Agenda } from 'react-native-calendars';\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\n\nvar Calendario = function (_React$Component) {\n  _inherits(Calendario, _React$Component);\n\n  var _super = _createSuper(Calendario);\n\n  function Calendario() {\n    _classCallCheck(this, Calendario);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Calendario, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Agenda, {\n        items: this.state.items,\n        selected: '2018-07-19',\n        renderItem: this.renderItem,\n        renderEmptyDate: function renderEmptyDate() {\n          return React.createElement(View, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 32\n            }\n          });\n        },\n        rowHasChanged: this.rowHasChanged,\n        onDayPress: function onDayPress(day) {\n          console.log('day pressed');\n        },\n        hideKnob: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return Calendario;\n}(React.Component);\n\nexport { Calendario as default };","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js"],"names":["CalendarList","Agenda","React","Calendario","state","items","renderItem","rowHasChanged","day","console","log","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,MAAvB,QAAoC,wBAApC;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;;;;;;;;;;;WACnB,kBAAS;AAAA;;AACP,aACI,oBAAC,MAAD;AACA,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KADlB;AAGA,QAAA,QAAQ,EAAE,YAHV;AAIA,QAAA,UAAU,EAAE,KAAKC,UAJjB;AAMA,QAAA,eAAe,EAAE;AAAA,iBAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SANjB;AAOA,QAAA,aAAa,EAAE,KAAKC,aAPpB;AAQA,QAAA,UAAU,EAAE,oBAACC,GAAD,EAAO;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA2B,SAR/C;AASA,QAAA,QAAQ,EAAE,IATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAwDD;;;;EA1DqCR,KAAK,CAACS,S;;SAAzBR,U","sourcesContent":["import { CalendarList, Agenda} from 'react-native-calendars'; // 1.5.3\r\nimport { View } from 'react-native';\r\nimport React from 'react';\r\n\r\nexport default class Calendario extends React.Component {\r\n  render() {\r\n    return (\r\n        <Agenda\r\n        items={this.state.items}\r\n        // loadItemsForMonth={this.loadItems}\r\n        selected={'2018-07-19'}\r\n        renderItem={this.renderItem}\r\n        // renderEmptyDate={this.renderEmptyDate}\r\n        renderEmptyDate={() => <View />}\r\n        rowHasChanged={this.rowHasChanged}\r\n        onDayPress={(day)=>{console.log('day pressed')}}\r\n        hideKnob={true}\r\n       />\r\n\r\n  /*    <View style={{ backgroundColor: '#ffac47'}}>\r\n        <CalendarList\r\n        calendarWidth={320}\r\n          firstDay={1}\r\n\r\n          style= {{\r\n            borderWidth: 0,\r\n            borderColor: '#ffac47',\r\n            height: 1000\r\n          }}\r\n\r\n        onDayPress={(day)=>{alert(`day pressed, ${day.day}`)}}\r\n\r\n        // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n        theme={{\r\n            backgroundColor: '#ffac47',\r\n            calendarBackground: '#ffac47',\r\n            textSectionTitleColor: '#b6c1cd',\r\n            textSectionTitleDisabledColor: '#d9e1e8',\r\n            selectedDayBackgroundColor: '#00adf5',\r\n            selectedDayTextColor: 'red',\r\n            todayTextColor: '#00adf5',\r\n            disabledArrowColor: 'red',\r\n            textDisabledColor: '#d9e1e8',\r\n            dotColor: '#00adf5',\r\n            selectedDotColor: '#ffffff',\r\n            arrowColor: 'white',\r\n            monthTextColor: 'blue',\r\n            indicatorColor: 'blue',\r\n            dayTextColor: 'blue',\r\n            textDayFontFamily: 'monospace',\r\n            textMonthFontFamily: 'monospace',\r\n            textDayHeaderFontFamily: 'monospace',\r\n            textDayFontWeight: '300',\r\n            textMonthFontWeight: 'bold',\r\n            textDayHeaderFontWeight: '300',\r\n            textDayFontSize: 25,\r\n            textMonthFontSize: 25,\r\n            textDayHeaderFontSize: 25\r\n        }}\r\n        />\r\n      </View> */\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}