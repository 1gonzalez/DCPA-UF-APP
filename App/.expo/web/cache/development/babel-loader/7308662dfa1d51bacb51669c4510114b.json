{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { CalendarList, Agenda } from 'react-native-calendars';\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\n\nvar Calendario = function (_React$Component) {\n  _inherits(Calendario, _React$Component);\n\n  var _super = _createSuper(Calendario);\n\n  function Calendario() {\n    _classCallCheck(this, Calendario);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Calendario, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Agenda, {\n        items: this.props.items,\n        loadItemsForMonth: this.props.loadItems,\n        renderItem: this.renderItem,\n        renderEmptyDate: this.renderEmptyDate,\n        rowHasChanged: this.rowHasChanged,\n        theme: {\n          dotColor: 'red',\n          selectedDayBackgroundColor: 'red',\n          agendaDayTextColor: 'red',\n          agendaDayNumColor: 'red',\n          agendaTodayColor: '#4F44B6',\n          backgroundColor: '#F1F1F8'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 14\n        }\n      });\n    }\n  }]);\n\n  return Calendario;\n}(React.Component);\n\nexport { Calendario as default };","map":{"version":3,"sources":["/mnt/d/Users/Caputo/Desktop/IDEs/VSCode/CEN3031/Project/DCPA-UF-APP/App/Calendar.js"],"names":["CalendarList","Agenda","React","Calendario","props","items","loadItems","renderItem","renderEmptyDate","rowHasChanged","dotColor","selectedDayBackgroundColor","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","backgroundColor","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,MAAvB,QAAoC,wBAApC;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACS,oBAAC,MAAD;AACC,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KADnB;AAEC,QAAA,iBAAiB,EAAE,KAAKD,KAAL,CAAWE,SAF/B;AAGC,QAAA,UAAU,EAAE,KAAKC,UAHlB;AAIC,QAAA,eAAe,EAAE,KAAKC,eAJvB;AAKC,QAAA,aAAa,EAAE,KAAKC,aALrB;AAMC,QAAA,KAAK,EAAE;AACNC,UAAAA,QAAQ,EAAE,KADJ;AAENC,UAAAA,0BAA0B,EAAE,KAFtB;AAGNC,UAAAA,kBAAkB,EAAE,KAHd;AAINC,UAAAA,iBAAiB,EAAE,KAJb;AAKNC,UAAAA,gBAAgB,EAAE,SALZ;AAMNC,UAAAA,eAAe,EAAE;AANX,SANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT;AA4DD;;;;EA9DqCb,KAAK,CAACc,S;;SAAzBb,U","sourcesContent":["import { CalendarList, Agenda} from 'react-native-calendars'; // 1.5.3\r\nimport { View } from 'react-native';\r\nimport React from 'react';\r\n\r\nexport default class Calendario extends React.Component {\r\n  render() {\r\n    return (\r\n             <Agenda\r\n              items={this.props.items}\r\n              loadItemsForMonth={this.props.loadItems}\r\n              renderItem={this.renderItem}\r\n              renderEmptyDate={this.renderEmptyDate}\r\n              rowHasChanged={this.rowHasChanged}\r\n              theme={{\r\n               dotColor: 'red',\r\n               selectedDayBackgroundColor: 'red',\r\n               agendaDayTextColor: 'red',\r\n               agendaDayNumColor: 'red',\r\n               agendaTodayColor: '#4F44B6',\r\n               backgroundColor: '#F1F1F8',\r\n              }}\r\n             />\r\n\r\n  /*    <View style={{ backgroundColor: '#ffac47'}}>\r\n        <CalendarList\r\n        calendarWidth={320}\r\n          firstDay={1}\r\n\r\n          style= {{\r\n            borderWidth: 0,\r\n            borderColor: '#ffac47',\r\n            height: 1000\r\n          }}\r\n\r\n        onDayPress={(day)=>{alert(`day pressed, ${day.day}`)}}\r\n\r\n        // Specify theme properties to override specific styles for calendar parts. Default = {}\r\n        theme={{\r\n            backgroundColor: '#ffac47',\r\n            calendarBackground: '#ffac47',\r\n            textSectionTitleColor: '#b6c1cd',\r\n            textSectionTitleDisabledColor: '#d9e1e8',\r\n            selectedDayBackgroundColor: '#00adf5',\r\n            selectedDayTextColor: 'red',\r\n            todayTextColor: '#00adf5',\r\n            disabledArrowColor: 'red',\r\n            textDisabledColor: '#d9e1e8',\r\n            dotColor: '#00adf5',\r\n            selectedDotColor: '#ffffff',\r\n            arrowColor: 'white',\r\n            monthTextColor: 'blue',\r\n            indicatorColor: 'blue',\r\n            dayTextColor: 'blue',\r\n            textDayFontFamily: 'monospace',\r\n            textMonthFontFamily: 'monospace',\r\n            textDayHeaderFontFamily: 'monospace',\r\n            textDayFontWeight: '300',\r\n            textMonthFontWeight: 'bold',\r\n            textDayHeaderFontWeight: '300',\r\n            textDayFontSize: 25,\r\n            textMonthFontSize: 25,\r\n            textDayHeaderFontSize: 25\r\n        }}\r\n        />\r\n      </View> */\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}